import { useState, useRef, useEffect } from 'react';
import { Button } from '@/components/ui/button';
import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';
import { Input } from '@/components/ui/input';
import { Label } from '@/components/ui/label';
import Icon from '@/components/ui/icon';

export default function Index() {
  const canvasRef = useRef<HTMLCanvasElement>(null);
  const [isGenerating, setIsGenerating] = useState(false);
  const [settings, setSettings] = useState({
    leftNumber: '-30',
    centerText: '–ñ–∞—Ä–∞ —Ñ–µ—Å—Ç',
    rightNumber: '+30',
    bottomText: '–í–µ–∑–¥–µ —Å–Ω–µ–≥, —É –Ω–∞—Å –ñ–ê–†–ê!',
    phone: '575-115',
  });

  useEffect(() => {
    drawPreview();
  }, [settings]);

  const drawPreview = () => {
    const canvas = canvasRef.current;
    if (!canvas) return;

    const ctx = canvas.getContext('2d');
    if (!ctx) return;

    ctx.fillStyle = '#0a0a0a';
    ctx.fillRect(0, 0, canvas.width, canvas.height);

    const gradient = ctx.createLinearGradient(0, 0, canvas.width, canvas.height);
    gradient.addColorStop(0, '#1a1a2e');
    gradient.addColorStop(0.5, '#16213e');
    gradient.addColorStop(1, '#0f3460');
    ctx.fillStyle = gradient;
    ctx.fillRect(0, 0, canvas.width, canvas.height);

    ctx.save();
    ctx.globalAlpha = 0.1;
    for (let i = 0; i < 50; i++) {
      ctx.fillStyle = '#ffffff';
      const x = Math.random() * canvas.width;
      const y = Math.random() * canvas.height;
      const size = Math.random() * 3;
      ctx.beginPath();
      ctx.arc(x, y, size, 0, Math.PI * 2);
      ctx.fill();
    }
    ctx.restore();

    ctx.font = 'bold 120px Arial';
    ctx.fillStyle = '#00d4ff';
    ctx.textAlign = 'left';
    ctx.fillText(settings.leftNumber, 50, 150);

    ctx.font = 'bold 140px Arial';
    ctx.fillStyle = '#ff3366';
    ctx.textAlign = 'center';
    ctx.fillText(settings.centerText, canvas.width / 2, 150);

    ctx.font = 'bold 120px Arial';
    ctx.fillStyle = '#ffaa00';
    ctx.textAlign = 'right';
    ctx.fillText(settings.rightNumber, canvas.width - 50, 150);

    ctx.beginPath();
    ctx.arc(canvas.width / 2, canvas.height / 2, 80, 0, Math.PI * 2);
    ctx.fillStyle = '#ffd700';
    ctx.fill();
    ctx.strokeStyle = '#ff3366';
    ctx.lineWidth = 4;
    ctx.stroke();

    ctx.font = '32px Arial';
    ctx.fillStyle = '#ffffff';
    ctx.textAlign = 'center';
    ctx.fillText('üéÖ', canvas.width / 2, canvas.height / 2 + 15);

    ctx.font = 'bold 60px Arial';
    ctx.fillStyle = '#ffffff';
    ctx.strokeStyle = '#ff3366';
    ctx.lineWidth = 3;
    ctx.textAlign = 'center';
    ctx.strokeText(settings.bottomText, canvas.width / 2, canvas.height - 100);
    ctx.fillText(settings.bottomText, canvas.width / 2, canvas.height - 100);

    ctx.font = 'bold 48px Arial';
    ctx.fillStyle = '#ffaa00';
    ctx.textAlign = 'right';
    ctx.fillText(settings.phone, canvas.width - 50, canvas.height - 40);
  };

  const generateVideo = async () => {
    setIsGenerating(true);
    
    setTimeout(() => {
      const canvas = canvasRef.current;
      if (!canvas) return;

      const link = document.createElement('a');
      link.download = 'zhara-fest-preview.png';
      link.href = canvas.toDataURL();
      link.click();
      
      setIsGenerating(false);
      alert('–ü—Ä–µ–≤—å—é —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ! –î–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –≤–∏–¥–µ–æ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –ü–û –¥–ª—è –º–æ–Ω—Ç–∞–∂–∞ —Å —É–∫–∞–∑–∞–Ω–Ω—ã–º–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏: 1152x576px, 30-60fps, 38.4 Mbps, –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å 5 —Å–µ–∫.');
    }, 1000);
  };

  return (
    <div className="min-h-screen bg-gradient-to-br from-slate-900 via-purple-900 to-slate-900 text-white">
      <div className="container mx-auto px-4 py-8 max-w-7xl">
        <div className="text-center mb-8">
          <h1 className="text-4xl md:text-6xl font-bold mb-4 bg-gradient-to-r from-blue-400 via-purple-400 to-pink-400 bg-clip-text text-transparent">
            –ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä –≤–∏–¥–µ–æ—Ä–µ–∫–ª–∞–º—ã
          </h1>
          <p className="text-xl text-gray-300">–ù–æ–≤–æ–≥–æ–¥–Ω–∏–µ –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤—ã ¬´–ñ–∞—Ä–∞ —Ñ–µ—Å—Ç¬ª</p>
        </div>

        <div className="grid lg:grid-cols-2 gap-8">
          <Card className="bg-slate-800 border-slate-700 shadow-2xl">
            <CardHeader>
              <CardTitle className="flex items-center gap-2 text-white">
                <Icon name="Settings" size={24} className="text-purple-400" />
                –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Ä–µ–∫–ª–∞–º—ã
              </CardTitle>
            </CardHeader>
            <CardContent className="space-y-6">
              <div className="space-y-2">
                <Label htmlFor="leftNumber" className="text-gray-200">
                  –õ–µ–≤–∞—è —Ü–∏—Ñ—Ä–∞ (—Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞)
                </Label>
                <Input
                  id="leftNumber"
                  value={settings.leftNumber}
                  onChange={(e) => setSettings({ ...settings, leftNumber: e.target.value })}
                  className="bg-slate-700 border-slate-600 text-white text-xl font-bold"
                  placeholder="-30"
                />
              </div>

              <div className="space-y-2">
                <Label htmlFor="centerText" className="text-gray-200">
                  –¶–µ–Ω—Ç—Ä–∞–ª—å–Ω—ã–π —Ç–µ–∫—Å—Ç (–Ω–∞–∑–≤–∞–Ω–∏–µ)
                </Label>
                <Input
                  id="centerText"
                  value={settings.centerText}
                  onChange={(e) => setSettings({ ...settings, centerText: e.target.value })}
                  className="bg-slate-700 border-slate-600 text-white text-xl font-bold"
                  placeholder="–ñ–∞—Ä–∞ —Ñ–µ—Å—Ç"
                />
              </div>

              <div className="space-y-2">
                <Label htmlFor="rightNumber" className="text-gray-200">
                  –ü—Ä–∞–≤–∞—è —Ü–∏—Ñ—Ä–∞ (—Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞)
                </Label>
                <Input
                  id="rightNumber"
                  value={settings.rightNumber}
                  onChange={(e) => setSettings({ ...settings, rightNumber: e.target.value })}
                  className="bg-slate-700 border-slate-600 text-white text-xl font-bold"
                  placeholder="+30"
                />
              </div>

              <div className="space-y-2">
                <Label htmlFor="bottomText" className="text-gray-200">
                  –ù–∏–∂–Ω–∏–π —Ç–µ–∫—Å—Ç (—Å–ª–æ–≥–∞–Ω)
                </Label>
                <Input
                  id="bottomText"
                  value={settings.bottomText}
                  onChange={(e) => setSettings({ ...settings, bottomText: e.target.value })}
                  className="bg-slate-700 border-slate-600 text-white text-xl font-bold"
                  placeholder="–í–µ–∑–¥–µ —Å–Ω–µ–≥, —É –Ω–∞—Å –ñ–ê–†–ê!"
                />
              </div>

              <div className="space-y-2">
                <Label htmlFor="phone" className="text-gray-200">
                  –¢–µ–ª–µ—Ñ–æ–Ω
                </Label>
                <Input
                  id="phone"
                  value={settings.phone}
                  onChange={(e) => setSettings({ ...settings, phone: e.target.value })}
                  className="bg-slate-700 border-slate-600 text-white text-xl font-bold"
                  placeholder="575-115"
                />
              </div>

              <div className="pt-4 space-y-4">
                <Button
                  onClick={generateVideo}
                  disabled={isGenerating}
                  className="w-full bg-gradient-to-r from-purple-600 to-pink-600 hover:from-purple-700 hover:to-pink-700 text-white font-bold text-lg py-6"
                >
                  {isGenerating ? (
                    <>
                      <Icon name="Loader2" size={24} className="mr-2 animate-spin" />
                      –ì–µ–Ω–µ—Ä–∞—Ü–∏—è...
                    </>
                  ) : (
                    <>
                      <Icon name="Download" size={24} className="mr-2" />
                      –°–∫–∞—á–∞—Ç—å –ø—Ä–µ–≤—å—é
                    </>
                  )}
                </Button>
                
                <div className="bg-slate-700 p-4 rounded-lg text-sm text-gray-300">
                  <h3 className="font-bold mb-2 flex items-center gap-2">
                    <Icon name="Info" size={16} className="text-blue-400" />
                    –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
                  </h3>
                  <ul className="space-y-1 text-xs">
                    <li>‚Ä¢ –†–∞–∑—Ä–µ—à–µ–Ω–∏–µ: 1152 √ó 576 px (6–º √ó 3–º)</li>
                    <li>‚Ä¢ –ß–∞—Å—Ç–æ—Ç–∞ –∫–∞–¥—Ä–æ–≤: 30-60 fps</li>
                    <li>‚Ä¢ –ë–∏—Ç—Ä–µ–π—Ç: 38.4 Mbps</li>
                    <li>‚Ä¢ –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: 5 —Å–µ–∫—É–Ω–¥</li>
                    <li>‚Ä¢ –Ø—Ä–∫–æ—Å—Ç—å: 6500 –∫–¥/–º¬≤</li>
                  </ul>
                </div>
              </div>
            </CardContent>
          </Card>

          <Card className="bg-slate-800 border-slate-700 shadow-2xl">
            <CardHeader>
              <CardTitle className="flex items-center gap-2 text-white">
                <Icon name="Eye" size={24} className="text-blue-400" />
                –ü—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä
              </CardTitle>
            </CardHeader>
            <CardContent>
              <div className="bg-black rounded-lg p-4 shadow-inner">
                <canvas
                  ref={canvasRef}
                  width={1152}
                  height={576}
                  className="w-full h-auto rounded border-2 border-slate-600"
                />
              </div>
              <p className="text-center text-gray-400 text-sm mt-4">
                –ü—Ä–æ–ø–æ—Ä—Ü–∏–∏: 2:1 (6–º √ó 3–º)
              </p>
            </CardContent>
          </Card>
        </div>

        <Card className="mt-8 bg-gradient-to-r from-orange-900/30 to-red-900/30 border-orange-600/50">
          <CardContent className="p-6">
            <div className="flex items-start gap-4">
              <Icon name="AlertTriangle" size={32} className="text-orange-400 flex-shrink-0 mt-1" />
              <div>
                <h3 className="text-xl font-bold mb-2 text-orange-200">–í–∞–∂–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è</h3>
                <p className="text-gray-300 leading-relaxed">
                  –≠—Ç–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç —Å—Ç–∞—Ç–∏—á–Ω–æ–µ –ø—Ä–µ–≤—å—é —Ä–µ–∫–ª–∞–º—ã. –î–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ñ–∏–Ω–∞–ª—å–Ω–æ–≥–æ –≤–∏–¥–µ–æ 
                  —Å –∞–Ω–∏–º–∞—Ü–∏–µ–π –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—ã –≤–∏–¥–µ–æ–º–æ–Ω—Ç–∞–∂–∞ (Adobe Premiere Pro, DaVinci Resolve, Final Cut Pro) 
                  —Å —É–∫–∞–∑–∞–Ω–Ω—ã–º–∏ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–º–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏. –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –¥–æ–±–∞–≤–∏—Ç—å –∞–Ω–∏–º–∞—Ü–∏—é –ø–æ—è–≤–ª–µ–Ω–∏—è —Ç–µ–∫—Å—Ç–∞, 
                  –±–ª–µ—Å–∫ –¥–∏—Å–∫–æ-—à–∞—Ä–∞ –∏ —ç—Ñ—Ñ–µ–∫—Ç –ø–∞–¥–∞—é—â–µ–≥–æ —Å–Ω–µ–≥–∞.
                </p>
              </div>
            </div>
          </CardContent>
        </Card>
      </div>
    </div>
  );
}
